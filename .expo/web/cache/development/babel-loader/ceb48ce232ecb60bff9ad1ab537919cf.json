{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"state\", \"descriptors\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nimport { HeaderShownContext, SafeAreaProviderCompat } from '@react-navigation/elements';\nimport { StackActions } from '@react-navigation/native';\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SafeAreaInsetsContext } from 'react-native-safe-area-context';\nimport ModalPresentationContext from \"../../utils/ModalPresentationContext\";\nimport { GestureHandlerRootView } from \"../GestureHandler\";\nimport HeaderContainer from \"../Header/HeaderContainer\";\nimport CardStack from \"./CardStack\";\nvar GestureHandlerWrapper = GestureHandlerRootView != null ? GestureHandlerRootView : View;\n\nvar isArrayEqual = function isArrayEqual(a, b) {\n  return a.length === b.length && a.every(function (it, index) {\n    return it === b[index];\n  });\n};\n\nvar StackView = function (_React$Component) {\n  _inherits(StackView, _React$Component);\n\n  var _super = _createSuper(StackView);\n\n  function StackView() {\n    var _this;\n\n    _classCallCheck(this, StackView);\n\n    _this = _super.apply(this, arguments);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      routes: [],\n      previousRoutes: [],\n      previousDescriptors: {},\n      openingRouteKeys: [],\n      closingRouteKeys: [],\n      replacingRouteKeys: [],\n      descriptors: {}\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getPreviousRoute\", function (_ref) {\n      var route = _ref.route;\n      var _this$state = _this.state,\n          closingRouteKeys = _this$state.closingRouteKeys,\n          replacingRouteKeys = _this$state.replacingRouteKeys;\n\n      var routes = _this.state.routes.filter(function (r) {\n        return r.key === route.key || !closingRouteKeys.includes(r.key) && !replacingRouteKeys.includes(r.key);\n      });\n\n      var index = routes.findIndex(function (r) {\n        return r.key === route.key;\n      });\n      return routes[index - 1];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderScene\", function (_ref2) {\n      var route = _ref2.route;\n      var descriptor = _this.state.descriptors[route.key] || _this.props.descriptors[route.key];\n\n      if (!descriptor) {\n        return null;\n      }\n\n      return descriptor.render();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderHeader\", function (props) {\n      return React.createElement(HeaderContainer, props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOpenRoute\", function (_ref3) {\n      var route = _ref3.route;\n      var _this$props = _this.props,\n          state = _this$props.state,\n          navigation = _this$props.navigation;\n      var _this$state2 = _this.state,\n          closingRouteKeys = _this$state2.closingRouteKeys,\n          replacingRouteKeys = _this$state2.replacingRouteKeys;\n\n      if (closingRouteKeys.some(function (key) {\n        return key === route.key;\n      }) && replacingRouteKeys.every(function (key) {\n        return key !== route.key;\n      }) && state.routeNames.includes(route.name) && !state.routes.some(function (r) {\n        return r.key === route.key;\n      })) {\n        navigation.navigate(route);\n      } else {\n        _this.setState(function (state) {\n          return {\n            routes: state.replacingRouteKeys.length ? state.routes.filter(function (r) {\n              return !state.replacingRouteKeys.includes(r.key);\n            }) : state.routes,\n            openingRouteKeys: state.openingRouteKeys.filter(function (key) {\n              return key !== route.key;\n            }),\n            closingRouteKeys: state.closingRouteKeys.filter(function (key) {\n              return key !== route.key;\n            }),\n            replacingRouteKeys: []\n          };\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCloseRoute\", function (_ref4) {\n      var route = _ref4.route;\n      var _this$props2 = _this.props,\n          state = _this$props2.state,\n          navigation = _this$props2.navigation;\n\n      if (state.routes.some(function (r) {\n        return r.key === route.key;\n      })) {\n        navigation.dispatch(_objectSpread(_objectSpread({}, StackActions.pop()), {}, {\n          source: route.key,\n          target: state.key\n        }));\n      } else {\n        _this.setState(function (state) {\n          return {\n            routes: state.routes.filter(function (r) {\n              return r.key !== route.key;\n            }),\n            openingRouteKeys: state.openingRouteKeys.filter(function (key) {\n              return key !== route.key;\n            }),\n            closingRouteKeys: state.closingRouteKeys.filter(function (key) {\n              return key !== route.key;\n            })\n          };\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTransitionStart\", function (_ref5, closing) {\n      var route = _ref5.route;\n      return _this.props.navigation.emit({\n        type: 'transitionStart',\n        data: {\n          closing: closing\n        },\n        target: route.key\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTransitionEnd\", function (_ref6, closing) {\n      var route = _ref6.route;\n      return _this.props.navigation.emit({\n        type: 'transitionEnd',\n        data: {\n          closing: closing\n        },\n        target: route.key\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleGestureStart\", function (_ref7) {\n      var route = _ref7.route;\n\n      _this.props.navigation.emit({\n        type: 'gestureStart',\n        target: route.key\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleGestureEnd\", function (_ref8) {\n      var route = _ref8.route;\n\n      _this.props.navigation.emit({\n        type: 'gestureEnd',\n        target: route.key\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleGestureCancel\", function (_ref9) {\n      var route = _ref9.route;\n\n      _this.props.navigation.emit({\n        type: 'gestureCancel',\n        target: route.key\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(StackView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          state = _this$props3.state,\n          _ = _this$props3.descriptors,\n          rest = _objectWithoutProperties(_this$props3, _excluded);\n\n      var _this$state3 = this.state,\n          routes = _this$state3.routes,\n          descriptors = _this$state3.descriptors,\n          openingRouteKeys = _this$state3.openingRouteKeys,\n          closingRouteKeys = _this$state3.closingRouteKeys;\n      return React.createElement(GestureHandlerWrapper, {\n        style: styles.container\n      }, React.createElement(SafeAreaProviderCompat, null, React.createElement(SafeAreaInsetsContext.Consumer, null, function (insets) {\n        return React.createElement(ModalPresentationContext.Consumer, null, function (isParentModal) {\n          return React.createElement(HeaderShownContext.Consumer, null, function (isParentHeaderShown) {\n            return React.createElement(CardStack, _extends({\n              insets: insets,\n              isParentHeaderShown: isParentHeaderShown,\n              isParentModal: isParentModal,\n              getPreviousRoute: _this2.getPreviousRoute,\n              routes: routes,\n              openingRouteKeys: openingRouteKeys,\n              closingRouteKeys: closingRouteKeys,\n              onOpenRoute: _this2.handleOpenRoute,\n              onCloseRoute: _this2.handleCloseRoute,\n              onTransitionStart: _this2.handleTransitionStart,\n              onTransitionEnd: _this2.handleTransitionEnd,\n              renderHeader: _this2.renderHeader,\n              renderScene: _this2.renderScene,\n              state: state,\n              descriptors: descriptors,\n              onGestureStart: _this2.handleGestureStart,\n              onGestureEnd: _this2.handleGestureEnd,\n              onGestureCancel: _this2.handleGestureCancel\n            }, rest));\n          });\n        });\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if ((props.state.routes === state.previousRoutes || isArrayEqual(props.state.routes.map(function (r) {\n        return r.key;\n      }), state.previousRoutes.map(function (r) {\n        return r.key;\n      }))) && state.routes.length) {\n        var _routes = state.routes;\n        var _previousRoutes = state.previousRoutes;\n        var _descriptors = props.descriptors;\n        var previousDescriptors = state.previousDescriptors;\n\n        if (props.descriptors !== state.previousDescriptors) {\n          _descriptors = state.routes.reduce(function (acc, route) {\n            acc[route.key] = props.descriptors[route.key] || state.descriptors[route.key];\n            return acc;\n          }, {});\n          previousDescriptors = props.descriptors;\n        }\n\n        if (props.state.routes !== state.previousRoutes) {\n          var map = props.state.routes.reduce(function (acc, route) {\n            acc[route.key] = route;\n            return acc;\n          }, {});\n          _routes = state.routes.map(function (route) {\n            return map[route.key] || route;\n          });\n          _previousRoutes = props.state.routes;\n        }\n\n        return {\n          routes: _routes,\n          previousRoutes: _previousRoutes,\n          descriptors: _descriptors,\n          previousDescriptors: previousDescriptors\n        };\n      }\n\n      var routes = props.state.index < props.state.routes.length - 1 ? props.state.routes.slice(0, props.state.index + 1) : props.state.routes;\n      var openingRouteKeys = state.openingRouteKeys,\n          closingRouteKeys = state.closingRouteKeys,\n          replacingRouteKeys = state.replacingRouteKeys,\n          previousRoutes = state.previousRoutes;\n      var previousFocusedRoute = previousRoutes[previousRoutes.length - 1];\n      var nextFocusedRoute = routes[routes.length - 1];\n\n      var isAnimationEnabled = function isAnimationEnabled(key) {\n        var descriptor = props.descriptors[key] || state.descriptors[key];\n        return descriptor ? descriptor.options.animationEnabled !== false : true;\n      };\n\n      var getAnimationTypeForReplace = function getAnimationTypeForReplace(key) {\n        var _descriptor$options$a;\n\n        var descriptor = props.descriptors[key] || state.descriptors[key];\n        return (_descriptor$options$a = descriptor.options.animationTypeForReplace) != null ? _descriptor$options$a : 'push';\n      };\n\n      if (previousFocusedRoute && previousFocusedRoute.key !== nextFocusedRoute.key) {\n        if (!previousRoutes.some(function (r) {\n          return r.key === nextFocusedRoute.key;\n        })) {\n          if (isAnimationEnabled(nextFocusedRoute.key) && !openingRouteKeys.includes(nextFocusedRoute.key)) {\n            openingRouteKeys = [].concat(_toConsumableArray(openingRouteKeys), [nextFocusedRoute.key]);\n            closingRouteKeys = closingRouteKeys.filter(function (key) {\n              return key !== nextFocusedRoute.key;\n            });\n            replacingRouteKeys = replacingRouteKeys.filter(function (key) {\n              return key !== nextFocusedRoute.key;\n            });\n\n            if (!routes.some(function (r) {\n              return r.key === previousFocusedRoute.key;\n            })) {\n              openingRouteKeys = openingRouteKeys.filter(function (key) {\n                return key !== previousFocusedRoute.key;\n              });\n\n              if (getAnimationTypeForReplace(nextFocusedRoute.key) === 'pop') {\n                closingRouteKeys = [].concat(_toConsumableArray(closingRouteKeys), [previousFocusedRoute.key]);\n                openingRouteKeys = openingRouteKeys.filter(function (key) {\n                  return key !== nextFocusedRoute.key;\n                });\n                routes = [].concat(_toConsumableArray(routes), [previousFocusedRoute]);\n              } else {\n                replacingRouteKeys = [].concat(_toConsumableArray(replacingRouteKeys), [previousFocusedRoute.key]);\n                closingRouteKeys = closingRouteKeys.filter(function (key) {\n                  return key !== previousFocusedRoute.key;\n                });\n                routes = routes.slice();\n                routes.splice(routes.length - 1, 0, previousFocusedRoute);\n              }\n            }\n          }\n        } else if (!routes.some(function (r) {\n          return r.key === previousFocusedRoute.key;\n        })) {\n          if (isAnimationEnabled(previousFocusedRoute.key) && !closingRouteKeys.includes(previousFocusedRoute.key)) {\n            closingRouteKeys = [].concat(_toConsumableArray(closingRouteKeys), [previousFocusedRoute.key]);\n            openingRouteKeys = openingRouteKeys.filter(function (key) {\n              return key !== previousFocusedRoute.key;\n            });\n            replacingRouteKeys = replacingRouteKeys.filter(function (key) {\n              return key !== previousFocusedRoute.key;\n            });\n            routes = [].concat(_toConsumableArray(routes), [previousFocusedRoute]);\n          }\n        } else {}\n      } else if (replacingRouteKeys.length || closingRouteKeys.length) {\n        var _routes2;\n\n        routes = routes.slice();\n\n        (_routes2 = routes).splice.apply(_routes2, [routes.length - 1, 0].concat(_toConsumableArray(state.routes.filter(function (_ref10) {\n          var key = _ref10.key;\n          return isAnimationEnabled(key) ? replacingRouteKeys.includes(key) || closingRouteKeys.includes(key) : false;\n        }))));\n      }\n\n      if (!routes.length) {\n        throw new Error('There should always be at least one route in the navigation state.');\n      }\n\n      var descriptors = routes.reduce(function (acc, route) {\n        acc[route.key] = props.descriptors[route.key] || state.descriptors[route.key];\n        return acc;\n      }, {});\n      return {\n        routes: routes,\n        previousRoutes: props.state.routes,\n        previousDescriptors: props.descriptors,\n        openingRouteKeys: openingRouteKeys,\n        closingRouteKeys: closingRouteKeys,\n        replacingRouteKeys: replacingRouteKeys,\n        descriptors: descriptors\n      };\n    }\n  }]);\n\n  return StackView;\n}(React.Component);\n\nexport { StackView as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["StackView.tsx"],"names":["HeaderShownContext","SafeAreaProviderCompat","StackActions","React","SafeAreaInsetsContext","ModalPresentationContext","GestureHandlerRootView","HeaderContainer","CardStack","GestureHandlerWrapper","View","isArrayEqual","a","b","length","every","it","index","StackView","Component","props","state","routes","previousRoutes","map","r","key","descriptors","previousDescriptors","reduce","acc","route","slice","openingRouteKeys","closingRouteKeys","replacingRouteKeys","previousFocusedRoute","nextFocusedRoute","isAnimationEnabled","descriptor","options","animationEnabled","getAnimationTypeForReplace","animationTypeForReplace","some","includes","filter","splice","Error","findIndex","render","navigation","routeNames","name","navigate","setState","dispatch","pop","source","target","closing","emit","type","data","_","rest","styles","container","insets","isParentModal","isParentHeaderShown","getPreviousRoute","handleOpenRoute","handleCloseRoute","handleTransitionStart","handleTransitionEnd","renderHeader","renderScene","handleGestureStart","handleGestureEnd","handleGestureCancel","StyleSheet","create","flex"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { HeaderShownContext, SafeAreaProviderCompat } from '@react-navigation/elements';\nimport { StackActions } from '@react-navigation/native';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { SafeAreaInsetsContext } from 'react-native-safe-area-context';\nimport ModalPresentationContext from '../../utils/ModalPresentationContext';\nimport { GestureHandlerRootView } from '../GestureHandler';\nimport HeaderContainer from '../Header/HeaderContainer';\nimport CardStack from './CardStack';\nconst GestureHandlerWrapper = GestureHandlerRootView ?? View;\n\n/**\n * Compare two arrays with primitive values as the content.\n * We need to make sure that both values and order match.\n */\nconst isArrayEqual = (a, b) => a.length === b.length && a.every((it, index) => it === b[index]);\nexport default class StackView extends React.Component {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", {\n      routes: [],\n      previousRoutes: [],\n      previousDescriptors: {},\n      openingRouteKeys: [],\n      closingRouteKeys: [],\n      replacingRouteKeys: [],\n      descriptors: {}\n    });\n    _defineProperty(this, \"getPreviousRoute\", _ref => {\n      let {\n        route\n      } = _ref;\n      const {\n        closingRouteKeys,\n        replacingRouteKeys\n      } = this.state;\n      const routes = this.state.routes.filter(r => r.key === route.key || !closingRouteKeys.includes(r.key) && !replacingRouteKeys.includes(r.key));\n      const index = routes.findIndex(r => r.key === route.key);\n      return routes[index - 1];\n    });\n    _defineProperty(this, \"renderScene\", _ref2 => {\n      let {\n        route\n      } = _ref2;\n      const descriptor = this.state.descriptors[route.key] || this.props.descriptors[route.key];\n      if (!descriptor) {\n        return null;\n      }\n      return descriptor.render();\n    });\n    _defineProperty(this, \"renderHeader\", props => {\n      return /*#__PURE__*/React.createElement(HeaderContainer, props);\n    });\n    _defineProperty(this, \"handleOpenRoute\", _ref3 => {\n      let {\n        route\n      } = _ref3;\n      const {\n        state,\n        navigation\n      } = this.props;\n      const {\n        closingRouteKeys,\n        replacingRouteKeys\n      } = this.state;\n      if (closingRouteKeys.some(key => key === route.key) && replacingRouteKeys.every(key => key !== route.key) && state.routeNames.includes(route.name) && !state.routes.some(r => r.key === route.key)) {\n        // If route isn't present in current state, but was closing, assume that a close animation was cancelled\n        // So we need to add this route back to the state\n        navigation.navigate(route);\n      } else {\n        this.setState(state => ({\n          routes: state.replacingRouteKeys.length ? state.routes.filter(r => !state.replacingRouteKeys.includes(r.key)) : state.routes,\n          openingRouteKeys: state.openingRouteKeys.filter(key => key !== route.key),\n          closingRouteKeys: state.closingRouteKeys.filter(key => key !== route.key),\n          replacingRouteKeys: []\n        }));\n      }\n    });\n    _defineProperty(this, \"handleCloseRoute\", _ref4 => {\n      let {\n        route\n      } = _ref4;\n      const {\n        state,\n        navigation\n      } = this.props;\n      if (state.routes.some(r => r.key === route.key)) {\n        // If a route exists in state, trigger a pop\n        // This will happen in when the route was closed from the card component\n        // e.g. When the close animation triggered from a gesture ends\n        navigation.dispatch({\n          ...StackActions.pop(),\n          source: route.key,\n          target: state.key\n        });\n      } else {\n        // We need to clean up any state tracking the route and pop it immediately\n        this.setState(state => ({\n          routes: state.routes.filter(r => r.key !== route.key),\n          openingRouteKeys: state.openingRouteKeys.filter(key => key !== route.key),\n          closingRouteKeys: state.closingRouteKeys.filter(key => key !== route.key)\n        }));\n      }\n    });\n    _defineProperty(this, \"handleTransitionStart\", (_ref5, closing) => {\n      let {\n        route\n      } = _ref5;\n      return this.props.navigation.emit({\n        type: 'transitionStart',\n        data: {\n          closing\n        },\n        target: route.key\n      });\n    });\n    _defineProperty(this, \"handleTransitionEnd\", (_ref6, closing) => {\n      let {\n        route\n      } = _ref6;\n      return this.props.navigation.emit({\n        type: 'transitionEnd',\n        data: {\n          closing\n        },\n        target: route.key\n      });\n    });\n    _defineProperty(this, \"handleGestureStart\", _ref7 => {\n      let {\n        route\n      } = _ref7;\n      this.props.navigation.emit({\n        type: 'gestureStart',\n        target: route.key\n      });\n    });\n    _defineProperty(this, \"handleGestureEnd\", _ref8 => {\n      let {\n        route\n      } = _ref8;\n      this.props.navigation.emit({\n        type: 'gestureEnd',\n        target: route.key\n      });\n    });\n    _defineProperty(this, \"handleGestureCancel\", _ref9 => {\n      let {\n        route\n      } = _ref9;\n      this.props.navigation.emit({\n        type: 'gestureCancel',\n        target: route.key\n      });\n    });\n  }\n  static getDerivedStateFromProps(props, state) {\n    // If there was no change in routes, we don't need to compute anything\n    if ((props.state.routes === state.previousRoutes || isArrayEqual(props.state.routes.map(r => r.key), state.previousRoutes.map(r => r.key))) && state.routes.length) {\n      let routes = state.routes;\n      let previousRoutes = state.previousRoutes;\n      let descriptors = props.descriptors;\n      let previousDescriptors = state.previousDescriptors;\n      if (props.descriptors !== state.previousDescriptors) {\n        descriptors = state.routes.reduce((acc, route) => {\n          acc[route.key] = props.descriptors[route.key] || state.descriptors[route.key];\n          return acc;\n        }, {});\n        previousDescriptors = props.descriptors;\n      }\n      if (props.state.routes !== state.previousRoutes) {\n        // if any route objects have changed, we should update them\n        const map = props.state.routes.reduce((acc, route) => {\n          acc[route.key] = route;\n          return acc;\n        }, {});\n        routes = state.routes.map(route => map[route.key] || route);\n        previousRoutes = props.state.routes;\n      }\n      return {\n        routes,\n        previousRoutes,\n        descriptors,\n        previousDescriptors\n      };\n    }\n\n    // Here we determine which routes were added or removed to animate them\n    // We keep a copy of the route being removed in local state to be able to animate it\n\n    let routes = props.state.index < props.state.routes.length - 1 ?\n    // Remove any extra routes from the state\n    // The last visible route should be the focused route, i.e. at current index\n    props.state.routes.slice(0, props.state.index + 1) : props.state.routes;\n\n    // Now we need to determine which routes were added and removed\n    let {\n      openingRouteKeys,\n      closingRouteKeys,\n      replacingRouteKeys,\n      previousRoutes\n    } = state;\n    const previousFocusedRoute = previousRoutes[previousRoutes.length - 1];\n    const nextFocusedRoute = routes[routes.length - 1];\n    const isAnimationEnabled = key => {\n      const descriptor = props.descriptors[key] || state.descriptors[key];\n      return descriptor ? descriptor.options.animationEnabled !== false : true;\n    };\n    const getAnimationTypeForReplace = key => {\n      const descriptor = props.descriptors[key] || state.descriptors[key];\n      return descriptor.options.animationTypeForReplace ?? 'push';\n    };\n    if (previousFocusedRoute && previousFocusedRoute.key !== nextFocusedRoute.key) {\n      // We only need to animate routes if the focused route changed\n      // Animating previous routes won't be visible coz the focused route is on top of everything\n\n      if (!previousRoutes.some(r => r.key === nextFocusedRoute.key)) {\n        // A new route has come to the focus, we treat this as a push\n        // A replace can also trigger this, the animation should look like push\n\n        if (isAnimationEnabled(nextFocusedRoute.key) && !openingRouteKeys.includes(nextFocusedRoute.key)) {\n          // In this case, we need to animate pushing the focused route\n          // We don't care about animating any other added routes because they won't be visible\n          openingRouteKeys = [...openingRouteKeys, nextFocusedRoute.key];\n          closingRouteKeys = closingRouteKeys.filter(key => key !== nextFocusedRoute.key);\n          replacingRouteKeys = replacingRouteKeys.filter(key => key !== nextFocusedRoute.key);\n          if (!routes.some(r => r.key === previousFocusedRoute.key)) {\n            // The previous focused route isn't present in state, we treat this as a replace\n\n            openingRouteKeys = openingRouteKeys.filter(key => key !== previousFocusedRoute.key);\n            if (getAnimationTypeForReplace(nextFocusedRoute.key) === 'pop') {\n              closingRouteKeys = [...closingRouteKeys, previousFocusedRoute.key];\n\n              // By default, new routes have a push animation, so we add it to `openingRouteKeys` before\n              // But since user configured it to animate the old screen like a pop, we need to add this without animation\n              // So remove it from `openingRouteKeys` which will remove the animation\n              openingRouteKeys = openingRouteKeys.filter(key => key !== nextFocusedRoute.key);\n\n              // Keep the route being removed at the end to animate it out\n              routes = [...routes, previousFocusedRoute];\n            } else {\n              replacingRouteKeys = [...replacingRouteKeys, previousFocusedRoute.key];\n              closingRouteKeys = closingRouteKeys.filter(key => key !== previousFocusedRoute.key);\n\n              // Keep the old route in the state because it's visible under the new route, and removing it will feel abrupt\n              // We need to insert it just before the focused one (the route being pushed)\n              // After the push animation is completed, routes being replaced will be removed completely\n              routes = routes.slice();\n              routes.splice(routes.length - 1, 0, previousFocusedRoute);\n            }\n          }\n        }\n      } else if (!routes.some(r => r.key === previousFocusedRoute.key)) {\n        // The previously focused route was removed, we treat this as a pop\n\n        if (isAnimationEnabled(previousFocusedRoute.key) && !closingRouteKeys.includes(previousFocusedRoute.key)) {\n          closingRouteKeys = [...closingRouteKeys, previousFocusedRoute.key];\n\n          // Sometimes a route can be closed before the opening animation finishes\n          // So we also need to remove it from the opening list\n          openingRouteKeys = openingRouteKeys.filter(key => key !== previousFocusedRoute.key);\n          replacingRouteKeys = replacingRouteKeys.filter(key => key !== previousFocusedRoute.key);\n\n          // Keep a copy of route being removed in the state to be able to animate it\n          routes = [...routes, previousFocusedRoute];\n        }\n      } else {\n        // Looks like some routes were re-arranged and no focused routes were added/removed\n        // i.e. the currently focused route already existed and the previously focused route still exists\n        // We don't know how to animate this\n      }\n    } else if (replacingRouteKeys.length || closingRouteKeys.length) {\n      // Keep the routes we are closing or replacing if animation is enabled for them\n      routes = routes.slice();\n      routes.splice(routes.length - 1, 0, ...state.routes.filter(_ref10 => {\n        let {\n          key\n        } = _ref10;\n        return isAnimationEnabled(key) ? replacingRouteKeys.includes(key) || closingRouteKeys.includes(key) : false;\n      }));\n    }\n    if (!routes.length) {\n      throw new Error('There should always be at least one route in the navigation state.');\n    }\n    const descriptors = routes.reduce((acc, route) => {\n      acc[route.key] = props.descriptors[route.key] || state.descriptors[route.key];\n      return acc;\n    }, {});\n    return {\n      routes,\n      previousRoutes: props.state.routes,\n      previousDescriptors: props.descriptors,\n      openingRouteKeys,\n      closingRouteKeys,\n      replacingRouteKeys,\n      descriptors\n    };\n  }\n  render() {\n    const {\n      state,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      descriptors: _,\n      ...rest\n    } = this.props;\n    const {\n      routes,\n      descriptors,\n      openingRouteKeys,\n      closingRouteKeys\n    } = this.state;\n    return /*#__PURE__*/React.createElement(GestureHandlerWrapper, {\n      style: styles.container\n    }, /*#__PURE__*/React.createElement(SafeAreaProviderCompat, null, /*#__PURE__*/React.createElement(SafeAreaInsetsContext.Consumer, null, insets => /*#__PURE__*/React.createElement(ModalPresentationContext.Consumer, null, isParentModal => /*#__PURE__*/React.createElement(HeaderShownContext.Consumer, null, isParentHeaderShown => /*#__PURE__*/React.createElement(CardStack, _extends({\n      insets: insets,\n      isParentHeaderShown: isParentHeaderShown,\n      isParentModal: isParentModal,\n      getPreviousRoute: this.getPreviousRoute,\n      routes: routes,\n      openingRouteKeys: openingRouteKeys,\n      closingRouteKeys: closingRouteKeys,\n      onOpenRoute: this.handleOpenRoute,\n      onCloseRoute: this.handleCloseRoute,\n      onTransitionStart: this.handleTransitionStart,\n      onTransitionEnd: this.handleTransitionEnd,\n      renderHeader: this.renderHeader,\n      renderScene: this.renderScene,\n      state: state,\n      descriptors: descriptors,\n      onGestureStart: this.handleGestureStart,\n      onGestureEnd: this.handleGestureEnd,\n      onGestureCancel: this.handleGestureCancel\n    }, rest)))))));\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\n//# sourceMappingURL=StackView.js.map"]},"metadata":{},"sourceType":"module"}