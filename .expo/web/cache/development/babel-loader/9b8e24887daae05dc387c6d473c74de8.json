{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"styleInterpolator\", \"interpolationIndex\", \"current\", \"gesture\", \"next\", \"layout\", \"insets\", \"overlay\", \"overlayEnabled\", \"shadowEnabled\", \"gestureEnabled\", \"gestureDirection\", \"pageOverflowEnabled\", \"headerDarkContent\", \"children\", \"containerStyle\", \"contentStyle\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nimport Color from 'color';\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { forModalPresentationIOS } from \"../../TransitionConfigs/CardStyleInterpolators\";\nimport CardAnimationContext from \"../../utils/CardAnimationContext\";\nimport getDistanceForDirection from \"../../utils/getDistanceForDirection\";\nimport getInvertedMultiplier from \"../../utils/getInvertedMultiplier\";\nimport memoize from \"../../utils/memoize\";\nimport { GestureState, PanGestureHandler } from \"../GestureHandler\";\nimport ModalStatusBarManager from \"../ModalStatusBarManager\";\nimport CardSheet from \"./CardSheet\";\nvar GESTURE_VELOCITY_IMPACT = 0.3;\nvar TRUE = 1;\nvar FALSE = 0;\nvar GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nvar GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\nvar useNativeDriver = Platform.OS !== 'web';\n\nvar hasOpacityStyle = function hasOpacityStyle(style) {\n  if (style) {\n    var flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n\n  return false;\n};\n\nvar Card = function (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  var _super = _createSuper(Card);\n\n  function Card() {\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    _this = _super.apply(this, arguments);\n\n    _defineProperty(_assertThisInitialized(_this), \"isCurrentlyMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"isClosing\", new Animated.Value(FALSE));\n\n    _defineProperty(_assertThisInitialized(_this), \"inverted\", new Animated.Value(getInvertedMultiplier(_this.props.gestureDirection)));\n\n    _defineProperty(_assertThisInitialized(_this), \"layout\", {\n      width: new Animated.Value(_this.props.layout.width),\n      height: new Animated.Value(_this.props.layout.height)\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isSwiping\", new Animated.Value(FALSE));\n\n    _defineProperty(_assertThisInitialized(_this), \"interactionHandle\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"pendingGestureCallback\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"lastToValue\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"animate\", function (_ref) {\n      var closing = _ref.closing,\n          velocity = _ref.velocity;\n      var _this$props = _this.props,\n          gesture = _this$props.gesture,\n          transitionSpec = _this$props.transitionSpec,\n          onOpen = _this$props.onOpen,\n          onClose = _this$props.onClose,\n          onTransition = _this$props.onTransition;\n\n      var toValue = _this.getAnimateToValue(_objectSpread(_objectSpread({}, _this.props), {}, {\n        closing: closing\n      }));\n\n      _this.lastToValue = toValue;\n\n      _this.isClosing.setValue(closing ? TRUE : FALSE);\n\n      var spec = closing ? transitionSpec.close : transitionSpec.open;\n      var animation = spec.animation === 'spring' ? Animated.spring : Animated.timing;\n\n      _this.setPointerEventsEnabled(!closing);\n\n      _this.handleStartInteraction();\n\n      clearTimeout(_this.pendingGestureCallback);\n      onTransition === null || onTransition === void 0 ? void 0 : onTransition({\n        closing: closing,\n        gesture: velocity !== undefined\n      });\n      animation(gesture, _objectSpread(_objectSpread({}, spec.config), {}, {\n        velocity: velocity,\n        toValue: toValue,\n        useNativeDriver: useNativeDriver,\n        isInteraction: false\n      })).start(function (_ref2) {\n        var finished = _ref2.finished;\n\n        _this.handleEndInteraction();\n\n        clearTimeout(_this.pendingGestureCallback);\n\n        if (finished) {\n          if (closing) {\n            onClose();\n          } else {\n            onOpen();\n          }\n\n          if (_this.isCurrentlyMounted) {\n            _this.forceUpdate();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getAnimateToValue\", function (_ref3) {\n      var closing = _ref3.closing,\n          layout = _ref3.layout,\n          gestureDirection = _ref3.gestureDirection;\n\n      if (!closing) {\n        return 0;\n      }\n\n      return getDistanceForDirection(layout, gestureDirection);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setPointerEventsEnabled\", function (enabled) {\n      var _this$ref$current;\n\n      var pointerEvents = enabled ? 'box-none' : 'none';\n      (_this$ref$current = _this.ref.current) === null || _this$ref$current === void 0 ? void 0 : _this$ref$current.setPointerEvents(pointerEvents);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleStartInteraction\", function () {\n      if (_this.interactionHandle === undefined) {\n        _this.interactionHandle = InteractionManager.createInteractionHandle();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEndInteraction\", function () {\n      if (_this.interactionHandle !== undefined) {\n        InteractionManager.clearInteractionHandle(_this.interactionHandle);\n        _this.interactionHandle = undefined;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleGestureStateChange\", function (_ref4) {\n      var nativeEvent = _ref4.nativeEvent;\n      var _this$props2 = _this.props,\n          layout = _this$props2.layout,\n          onClose = _this$props2.onClose,\n          onGestureBegin = _this$props2.onGestureBegin,\n          onGestureCanceled = _this$props2.onGestureCanceled,\n          onGestureEnd = _this$props2.onGestureEnd,\n          gestureDirection = _this$props2.gestureDirection,\n          gestureVelocityImpact = _this$props2.gestureVelocityImpact;\n\n      switch (nativeEvent.state) {\n        case GestureState.ACTIVE:\n          _this.isSwiping.setValue(TRUE);\n\n          _this.handleStartInteraction();\n\n          onGestureBegin === null || onGestureBegin === void 0 ? void 0 : onGestureBegin();\n          break;\n\n        case GestureState.CANCELLED:\n          {\n            _this.isSwiping.setValue(FALSE);\n\n            _this.handleEndInteraction();\n\n            var velocity = gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? nativeEvent.velocityY : nativeEvent.velocityX;\n\n            _this.animate({\n              closing: _this.props.closing,\n              velocity: velocity\n            });\n\n            onGestureCanceled === null || onGestureCanceled === void 0 ? void 0 : onGestureCanceled();\n            break;\n          }\n\n        case GestureState.END:\n          {\n            _this.isSwiping.setValue(FALSE);\n\n            var distance;\n            var translation;\n\n            var _velocity;\n\n            if (gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted') {\n              distance = layout.height;\n              translation = nativeEvent.translationY;\n              _velocity = nativeEvent.velocityY;\n            } else {\n              distance = layout.width;\n              translation = nativeEvent.translationX;\n              _velocity = nativeEvent.velocityX;\n            }\n\n            var closing = (translation + _velocity * gestureVelocityImpact) * getInvertedMultiplier(gestureDirection) > distance / 2 ? _velocity !== 0 || translation !== 0 : _this.props.closing;\n\n            _this.animate({\n              closing: closing,\n              velocity: _velocity\n            });\n\n            if (closing) {\n              _this.pendingGestureCallback = setTimeout(function () {\n                onClose();\n\n                _this.forceUpdate();\n              }, 32);\n            }\n\n            onGestureEnd === null || onGestureEnd === void 0 ? void 0 : onGestureEnd();\n            break;\n          }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getInterpolatedStyle\", memoize(function (styleInterpolator, animation) {\n      return styleInterpolator(animation);\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"getCardAnimation\", memoize(function (interpolationIndex, current, next, layout, insetTop, insetRight, insetBottom, insetLeft) {\n      return {\n        index: interpolationIndex,\n        current: {\n          progress: current\n        },\n        next: next && {\n          progress: next\n        },\n        closing: _this.isClosing,\n        swiping: _this.isSwiping,\n        inverted: _this.inverted,\n        layouts: {\n          screen: layout\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft\n        }\n      };\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"ref\", React.createRef());\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.animate({\n        closing: this.props.closing\n      });\n      this.isCurrentlyMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props3 = this.props,\n          layout = _this$props3.layout,\n          gestureDirection = _this$props3.gestureDirection,\n          closing = _this$props3.closing;\n      var width = layout.width,\n          height = layout.height;\n\n      if (width !== prevProps.layout.width) {\n        this.layout.width.setValue(width);\n      }\n\n      if (height !== prevProps.layout.height) {\n        this.layout.height.setValue(height);\n      }\n\n      if (gestureDirection !== prevProps.gestureDirection) {\n        this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n      }\n\n      var toValue = this.getAnimateToValue(this.props);\n\n      if (this.getAnimateToValue(prevProps) !== toValue || this.lastToValue !== toValue) {\n        this.animate({\n          closing: closing\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.gesture.stopAnimation();\n      this.isCurrentlyMounted = false;\n      this.handleEndInteraction();\n    }\n  }, {\n    key: \"gestureActivationCriteria\",\n    value: function gestureActivationCriteria() {\n      var _this$props4 = this.props,\n          layout = _this$props4.layout,\n          gestureDirection = _this$props4.gestureDirection,\n          gestureResponseDistance = _this$props4.gestureResponseDistance;\n      var enableTrackpadTwoFingerGesture = true;\n      var distance = gestureResponseDistance !== undefined ? gestureResponseDistance : gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? GESTURE_RESPONSE_DISTANCE_VERTICAL : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n      if (gestureDirection === 'vertical') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: 5,\n          hitSlop: {\n            bottom: -layout.height + distance\n          },\n          enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n        };\n      } else if (gestureDirection === 'vertical-inverted') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: -5,\n          hitSlop: {\n            top: -layout.height + distance\n          },\n          enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n        };\n      } else {\n        var hitSlop = -layout.width + distance;\n        var invertedMultiplier = getInvertedMultiplier(gestureDirection);\n\n        if (invertedMultiplier === 1) {\n          return {\n            minOffsetX: 5,\n            maxDeltaY: 20,\n            hitSlop: {\n              right: hitSlop\n            },\n            enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n          };\n        } else {\n          return {\n            minOffsetX: -5,\n            maxDeltaY: 20,\n            hitSlop: {\n              left: hitSlop\n            },\n            enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n          };\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          styleInterpolator = _this$props5.styleInterpolator,\n          interpolationIndex = _this$props5.interpolationIndex,\n          current = _this$props5.current,\n          gesture = _this$props5.gesture,\n          next = _this$props5.next,\n          layout = _this$props5.layout,\n          insets = _this$props5.insets,\n          overlay = _this$props5.overlay,\n          overlayEnabled = _this$props5.overlayEnabled,\n          shadowEnabled = _this$props5.shadowEnabled,\n          gestureEnabled = _this$props5.gestureEnabled,\n          gestureDirection = _this$props5.gestureDirection,\n          pageOverflowEnabled = _this$props5.pageOverflowEnabled,\n          headerDarkContent = _this$props5.headerDarkContent,\n          children = _this$props5.children,\n          customContainerStyle = _this$props5.containerStyle,\n          contentStyle = _this$props5.contentStyle,\n          rest = _objectWithoutProperties(_this$props5, _excluded);\n\n      var interpolationProps = this.getCardAnimation(interpolationIndex, current, next, layout, insets.top, insets.right, insets.bottom, insets.left);\n      var interpolatedStyle = this.getInterpolatedStyle(styleInterpolator, interpolationProps);\n      var containerStyle = interpolatedStyle.containerStyle,\n          cardStyle = interpolatedStyle.cardStyle,\n          overlayStyle = interpolatedStyle.overlayStyle,\n          shadowStyle = interpolatedStyle.shadowStyle;\n      var handleGestureEvent = gestureEnabled ? Animated.event([{\n        nativeEvent: gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? {\n          translationY: gesture\n        } : {\n          translationX: gesture\n        }\n      }], {\n        useNativeDriver: useNativeDriver\n      }) : undefined;\n\n      var _StyleSheet$flatten = StyleSheet.flatten(contentStyle || {}),\n          backgroundColor = _StyleSheet$flatten.backgroundColor;\n\n      var isTransparent = typeof backgroundColor === 'string' ? Color(backgroundColor).alpha() === 0 : false;\n      return React.createElement(CardAnimationContext.Provider, {\n        value: interpolationProps\n      }, Platform.OS === 'ios' && overlayEnabled && next && getIsModalPresentation(styleInterpolator) ? React.createElement(ModalStatusBarManager, {\n        dark: headerDarkContent,\n        layout: layout,\n        insets: insets,\n        style: cardStyle\n      }) : null, React.createElement(Animated.View, {\n        style: {\n          opacity: current\n        },\n        collapsable: false\n      }), React.createElement(View, _extends({\n        pointerEvents: \"box-none\"\n      }, rest), overlayEnabled ? React.createElement(View, {\n        pointerEvents: \"box-none\",\n        style: StyleSheet.absoluteFill\n      }, overlay({\n        style: overlayStyle\n      })) : null, React.createElement(Animated.View, {\n        style: [styles.container, containerStyle, customContainerStyle],\n        pointerEvents: \"box-none\"\n      }, React.createElement(PanGestureHandler, _extends({\n        enabled: layout.width !== 0 && gestureEnabled,\n        onGestureEvent: handleGestureEvent,\n        onHandlerStateChange: this.handleGestureStateChange\n      }, this.gestureActivationCriteria()), React.createElement(Animated.View, {\n        needsOffscreenAlphaCompositing: hasOpacityStyle(cardStyle),\n        style: [styles.container, cardStyle]\n      }, shadowEnabled && shadowStyle && !isTransparent ? React.createElement(Animated.View, {\n        style: [styles.shadow, gestureDirection === 'horizontal' ? [styles.shadowHorizontal, styles.shadowLeft] : gestureDirection === 'horizontal-inverted' ? [styles.shadowHorizontal, styles.shadowRight] : gestureDirection === 'vertical' ? [styles.shadowVertical, styles.shadowTop] : [styles.shadowVertical, styles.shadowBottom], {\n          backgroundColor: backgroundColor\n        }, shadowStyle],\n        pointerEvents: \"none\"\n      }) : null, React.createElement(CardSheet, {\n        ref: this.ref,\n        enabled: pageOverflowEnabled,\n        layout: layout,\n        style: contentStyle\n      }, children))))));\n    }\n  }]);\n\n  return Card;\n}(React.Component);\n\nexport { Card as default };\n\n_defineProperty(Card, \"defaultProps\", {\n  shadowEnabled: false,\n  gestureEnabled: true,\n  gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n  overlay: function overlay(_ref5) {\n    var style = _ref5.style;\n    return style ? React.createElement(Animated.View, {\n      pointerEvents: \"none\",\n      style: [styles.overlay, style]\n    }) : null;\n  }\n});\n\nexport var getIsModalPresentation = function getIsModalPresentation(cardStyleInterpolator) {\n  return cardStyleInterpolator === forModalPresentationIOS || cardStyleInterpolator.name === 'forModalPresentationIOS';\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: {\n      width: -1,\n      height: 1\n    }\n  },\n  shadowLeft: {\n    left: 0\n  },\n  shadowRight: {\n    right: 0\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: {\n      width: 1,\n      height: -1\n    }\n  },\n  shadowTop: {\n    top: 0\n  },\n  shadowBottom: {\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["Card.tsx"],"names":["Color","React","forModalPresentationIOS","CardAnimationContext","getDistanceForDirection","getInvertedMultiplier","memoize","GestureState","PanGestureHandler","ModalStatusBarManager","CardSheet","GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","Platform","OS","hasOpacityStyle","style","flattenedStyle","StyleSheet","flatten","opacity","Card","Component","shadowEnabled","gestureEnabled","gestureVelocityImpact","overlay","styles","componentDidMount","animate","closing","props","isCurrentlyMounted","componentDidUpdate","prevProps","layout","gestureDirection","width","height","setValue","inverted","toValue","getAnimateToValue","lastToValue","componentWillUnmount","gesture","stopAnimation","handleEndInteraction","Animated","Value","velocity","transitionSpec","onOpen","onClose","onTransition","isClosing","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","clearTimeout","pendingGestureCallback","undefined","config","isInteraction","start","finished","forceUpdate","enabled","pointerEvents","ref","current","setPointerEvents","interactionHandle","InteractionManager","createInteractionHandle","clearInteractionHandle","nativeEvent","onGestureBegin","onGestureCanceled","onGestureEnd","state","ACTIVE","isSwiping","CANCELLED","velocityY","velocityX","END","distance","translation","translationY","translationX","setTimeout","styleInterpolator","interpolationIndex","next","insetTop","insetRight","insetBottom","insetLeft","index","progress","swiping","layouts","screen","insets","top","right","bottom","left","gestureActivationCriteria","gestureResponseDistance","enableTrackpadTwoFingerGesture","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","createRef","render","overlayEnabled","pageOverflowEnabled","headerDarkContent","children","containerStyle","customContainerStyle","contentStyle","rest","interpolationProps","getCardAnimation","interpolatedStyle","getInterpolatedStyle","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","backgroundColor","isTransparent","alpha","getIsModalPresentation","absoluteFill","container","handleGestureStateChange","shadow","shadowHorizontal","shadowLeft","shadowRight","shadowVertical","shadowTop","shadowBottom","cardStyleInterpolator","name","create","flex","position","shadowRadius","shadowColor","shadowOpacity","shadowOffset"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport Color from 'color';\nimport * as React from 'react';\nimport { Animated, InteractionManager, Platform, StyleSheet, View } from 'react-native';\nimport { forModalPresentationIOS } from '../../TransitionConfigs/CardStyleInterpolators';\nimport CardAnimationContext from '../../utils/CardAnimationContext';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport getInvertedMultiplier from '../../utils/getInvertedMultiplier';\nimport memoize from '../../utils/memoize';\nimport { GestureState, PanGestureHandler } from '../GestureHandler';\nimport ModalStatusBarManager from '../ModalStatusBarManager';\nimport CardSheet from './CardSheet';\nconst GESTURE_VELOCITY_IMPACT = 0.3;\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\nconst useNativeDriver = Platform.OS !== 'web';\nconst hasOpacityStyle = style => {\n  if (style) {\n    const flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n  return false;\n};\nexport default class Card extends React.Component {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"isCurrentlyMounted\", false);\n    _defineProperty(this, \"isClosing\", new Animated.Value(FALSE));\n    _defineProperty(this, \"inverted\", new Animated.Value(getInvertedMultiplier(this.props.gestureDirection)));\n    _defineProperty(this, \"layout\", {\n      width: new Animated.Value(this.props.layout.width),\n      height: new Animated.Value(this.props.layout.height)\n    });\n    _defineProperty(this, \"isSwiping\", new Animated.Value(FALSE));\n    _defineProperty(this, \"interactionHandle\", void 0);\n    _defineProperty(this, \"pendingGestureCallback\", void 0);\n    _defineProperty(this, \"lastToValue\", void 0);\n    _defineProperty(this, \"animate\", _ref => {\n      let {\n        closing,\n        velocity\n      } = _ref;\n      const {\n        gesture,\n        transitionSpec,\n        onOpen,\n        onClose,\n        onTransition\n      } = this.props;\n      const toValue = this.getAnimateToValue({\n        ...this.props,\n        closing\n      });\n      this.lastToValue = toValue;\n      this.isClosing.setValue(closing ? TRUE : FALSE);\n      const spec = closing ? transitionSpec.close : transitionSpec.open;\n      const animation = spec.animation === 'spring' ? Animated.spring : Animated.timing;\n      this.setPointerEventsEnabled(!closing);\n      this.handleStartInteraction();\n      clearTimeout(this.pendingGestureCallback);\n      onTransition === null || onTransition === void 0 ? void 0 : onTransition({\n        closing,\n        gesture: velocity !== undefined\n      });\n      animation(gesture, {\n        ...spec.config,\n        velocity,\n        toValue,\n        useNativeDriver,\n        isInteraction: false\n      }).start(_ref2 => {\n        let {\n          finished\n        } = _ref2;\n        this.handleEndInteraction();\n        clearTimeout(this.pendingGestureCallback);\n        if (finished) {\n          if (closing) {\n            onClose();\n          } else {\n            onOpen();\n          }\n          if (this.isCurrentlyMounted) {\n            // Make sure to re-open screen if it wasn't removed\n            this.forceUpdate();\n          }\n        }\n      });\n    });\n    _defineProperty(this, \"getAnimateToValue\", _ref3 => {\n      let {\n        closing,\n        layout,\n        gestureDirection\n      } = _ref3;\n      if (!closing) {\n        return 0;\n      }\n      return getDistanceForDirection(layout, gestureDirection);\n    });\n    _defineProperty(this, \"setPointerEventsEnabled\", enabled => {\n      var _this$ref$current;\n      const pointerEvents = enabled ? 'box-none' : 'none';\n      (_this$ref$current = this.ref.current) === null || _this$ref$current === void 0 ? void 0 : _this$ref$current.setPointerEvents(pointerEvents);\n    });\n    _defineProperty(this, \"handleStartInteraction\", () => {\n      if (this.interactionHandle === undefined) {\n        this.interactionHandle = InteractionManager.createInteractionHandle();\n      }\n    });\n    _defineProperty(this, \"handleEndInteraction\", () => {\n      if (this.interactionHandle !== undefined) {\n        InteractionManager.clearInteractionHandle(this.interactionHandle);\n        this.interactionHandle = undefined;\n      }\n    });\n    _defineProperty(this, \"handleGestureStateChange\", _ref4 => {\n      let {\n        nativeEvent\n      } = _ref4;\n      const {\n        layout,\n        onClose,\n        onGestureBegin,\n        onGestureCanceled,\n        onGestureEnd,\n        gestureDirection,\n        gestureVelocityImpact\n      } = this.props;\n      switch (nativeEvent.state) {\n        case GestureState.ACTIVE:\n          this.isSwiping.setValue(TRUE);\n          this.handleStartInteraction();\n          onGestureBegin === null || onGestureBegin === void 0 ? void 0 : onGestureBegin();\n          break;\n        case GestureState.CANCELLED:\n          {\n            this.isSwiping.setValue(FALSE);\n            this.handleEndInteraction();\n            const velocity = gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? nativeEvent.velocityY : nativeEvent.velocityX;\n            this.animate({\n              closing: this.props.closing,\n              velocity\n            });\n            onGestureCanceled === null || onGestureCanceled === void 0 ? void 0 : onGestureCanceled();\n            break;\n          }\n        case GestureState.END:\n          {\n            this.isSwiping.setValue(FALSE);\n            let distance;\n            let translation;\n            let velocity;\n            if (gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted') {\n              distance = layout.height;\n              translation = nativeEvent.translationY;\n              velocity = nativeEvent.velocityY;\n            } else {\n              distance = layout.width;\n              translation = nativeEvent.translationX;\n              velocity = nativeEvent.velocityX;\n            }\n            const closing = (translation + velocity * gestureVelocityImpact) * getInvertedMultiplier(gestureDirection) > distance / 2 ? velocity !== 0 || translation !== 0 : this.props.closing;\n            this.animate({\n              closing,\n              velocity\n            });\n            if (closing) {\n              // We call onClose with a delay to make sure that the animation has already started\n              // This will make sure that the state update caused by this doesn't affect start of animation\n              this.pendingGestureCallback = setTimeout(() => {\n                onClose();\n\n                // Trigger an update after we dispatch the action to remove the screen\n                // This will make sure that we check if the screen didn't get removed so we can cancel the animation\n                this.forceUpdate();\n              }, 32);\n            }\n            onGestureEnd === null || onGestureEnd === void 0 ? void 0 : onGestureEnd();\n            break;\n          }\n      }\n    });\n    _defineProperty(this, \"getInterpolatedStyle\", memoize((styleInterpolator, animation) => styleInterpolator(animation)));\n    _defineProperty(this, \"getCardAnimation\", memoize((interpolationIndex, current, next, layout, insetTop, insetRight, insetBottom, insetLeft) => ({\n      index: interpolationIndex,\n      current: {\n        progress: current\n      },\n      next: next && {\n        progress: next\n      },\n      closing: this.isClosing,\n      swiping: this.isSwiping,\n      inverted: this.inverted,\n      layouts: {\n        screen: layout\n      },\n      insets: {\n        top: insetTop,\n        right: insetRight,\n        bottom: insetBottom,\n        left: insetLeft\n      }\n    })));\n    _defineProperty(this, \"ref\", /*#__PURE__*/React.createRef());\n  }\n  componentDidMount() {\n    this.animate({\n      closing: this.props.closing\n    });\n    this.isCurrentlyMounted = true;\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      layout,\n      gestureDirection,\n      closing\n    } = this.props;\n    const {\n      width,\n      height\n    } = layout;\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n    }\n    const toValue = this.getAnimateToValue(this.props);\n    if (this.getAnimateToValue(prevProps) !== toValue || this.lastToValue !== toValue) {\n      // We need to trigger the animation when route was closed\n      // Thr route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({\n        closing\n      });\n    }\n  }\n  componentWillUnmount() {\n    this.props.gesture.stopAnimation();\n    this.isCurrentlyMounted = false;\n    this.handleEndInteraction();\n  }\n  gestureActivationCriteria() {\n    const {\n      layout,\n      gestureDirection,\n      gestureResponseDistance\n    } = this.props;\n    const enableTrackpadTwoFingerGesture = true;\n    const distance = gestureResponseDistance !== undefined ? gestureResponseDistance : gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? GESTURE_RESPONSE_DISTANCE_VERTICAL : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: {\n          bottom: -layout.height + distance\n        },\n        enableTrackpadTwoFingerGesture\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: {\n          top: -layout.height + distance\n        },\n        enableTrackpadTwoFingerGesture\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(gestureDirection);\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: {\n            right: hitSlop\n          },\n          enableTrackpadTwoFingerGesture\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: {\n            left: hitSlop\n          },\n          enableTrackpadTwoFingerGesture\n        };\n      }\n    }\n  }\n  render() {\n    const {\n      styleInterpolator,\n      interpolationIndex,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlay,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      pageOverflowEnabled,\n      headerDarkContent,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      ...rest\n    } = this.props;\n    const interpolationProps = this.getCardAnimation(interpolationIndex, current, next, layout, insets.top, insets.right, insets.bottom, insets.left);\n    const interpolatedStyle = this.getInterpolatedStyle(styleInterpolator, interpolationProps);\n    const {\n      containerStyle,\n      cardStyle,\n      overlayStyle,\n      shadowStyle\n    } = interpolatedStyle;\n    const handleGestureEvent = gestureEnabled ? Animated.event([{\n      nativeEvent: gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? {\n        translationY: gesture\n      } : {\n        translationX: gesture\n      }\n    }], {\n      useNativeDriver\n    }) : undefined;\n    const {\n      backgroundColor\n    } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent = typeof backgroundColor === 'string' ? Color(backgroundColor).alpha() === 0 : false;\n    return /*#__PURE__*/React.createElement(CardAnimationContext.Provider, {\n      value: interpolationProps\n    },\n    // StatusBar messes with translucent status bar on Android\n    // So we should only enable it on iOS\n    Platform.OS === 'ios' && overlayEnabled && next && getIsModalPresentation(styleInterpolator) ? /*#__PURE__*/React.createElement(ModalStatusBarManager, {\n      dark: headerDarkContent,\n      layout: layout,\n      insets: insets,\n      style: cardStyle\n    }) : null, /*#__PURE__*/React.createElement(Animated.View, {\n      style: {\n        // This is a dummy style that doesn't actually change anything visually.\n        // Animated needs the animated value to be used somewhere, otherwise things don't update properly.\n        // If we disable animations and hide header, it could end up making the value unused.\n        // So we have this dummy style that will always be used regardless of what else changed.\n        opacity: current\n      }\n      // Make sure that this view isn't removed. If this view is removed, our style with animated value won't apply\n      ,\n      collapsable: false\n    }), /*#__PURE__*/React.createElement(View, _extends({\n      pointerEvents: \"box-none\"\n    }, rest), overlayEnabled ? /*#__PURE__*/React.createElement(View, {\n      pointerEvents: \"box-none\",\n      style: StyleSheet.absoluteFill\n    }, overlay({\n      style: overlayStyle\n    })) : null, /*#__PURE__*/React.createElement(Animated.View, {\n      style: [styles.container, containerStyle, customContainerStyle],\n      pointerEvents: \"box-none\"\n    }, /*#__PURE__*/React.createElement(PanGestureHandler, _extends({\n      enabled: layout.width !== 0 && gestureEnabled,\n      onGestureEvent: handleGestureEvent,\n      onHandlerStateChange: this.handleGestureStateChange\n    }, this.gestureActivationCriteria()), /*#__PURE__*/React.createElement(Animated.View, {\n      needsOffscreenAlphaCompositing: hasOpacityStyle(cardStyle),\n      style: [styles.container, cardStyle]\n    }, shadowEnabled && shadowStyle && !isTransparent ? /*#__PURE__*/React.createElement(Animated.View, {\n      style: [styles.shadow, gestureDirection === 'horizontal' ? [styles.shadowHorizontal, styles.shadowLeft] : gestureDirection === 'horizontal-inverted' ? [styles.shadowHorizontal, styles.shadowRight] : gestureDirection === 'vertical' ? [styles.shadowVertical, styles.shadowTop] : [styles.shadowVertical, styles.shadowBottom], {\n        backgroundColor\n      }, shadowStyle],\n      pointerEvents: \"none\"\n    }) : null, /*#__PURE__*/React.createElement(CardSheet, {\n      ref: this.ref,\n      enabled: pageOverflowEnabled,\n      layout: layout,\n      style: contentStyle\n    }, children))))));\n  }\n}\n_defineProperty(Card, \"defaultProps\", {\n  shadowEnabled: false,\n  gestureEnabled: true,\n  gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n  overlay: _ref5 => {\n    let {\n      style\n    } = _ref5;\n    return style ? /*#__PURE__*/React.createElement(Animated.View, {\n      pointerEvents: \"none\",\n      style: [styles.overlay, style]\n    }) : null;\n  }\n});\nexport const getIsModalPresentation = cardStyleInterpolator => {\n  return cardStyleInterpolator === forModalPresentationIOS ||\n  // Handle custom modal presentation interpolators as well\n  cardStyleInterpolator.name === 'forModalPresentationIOS';\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: {\n      width: -1,\n      height: 1\n    }\n  },\n  shadowLeft: {\n    left: 0\n  },\n  shadowRight: {\n    right: 0\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: {\n      width: 1,\n      height: -1\n    }\n  },\n  shadowTop: {\n    top: 0\n  },\n  shadowBottom: {\n    bottom: 0\n  }\n});\n//# sourceMappingURL=Card.js.map"]},"metadata":{},"sourceType":"module"}